! アニメーション パラメータ / Animation Parameters

アニメーション パラメータによりゲームロジックに対して、ステートマシンの操作を開放します。イベントはイベントパラメータにもとづいてトリガーされ、ゲームロジックから有効化します。通常イベントは3つの箇所で作業できます：

# ~~Animator Controller Window~~ の左下にある ~~Parameter Widget~~ でパラメータをセットアップ
#  ~~Transition Inspector~~ で、それらのパラメータにもとづいて、遷移の条件をセットアップ
# スクリプトからパラメータを制御

Attach:MecanimEvents.png

イベントパラメータは4つの種類からなります：''Vector'' 、''Float'' 、''Int'' 、および''Bool'' であり、各々 [[ScriptRef:Animator.SetVector.html|SetVector]] 、 [[ScriptRef:Animator.SetFloat.html|SetFloat]] 、 [[ScriptRef:Animator.SetInt.html|SetInt]] 、および [[ScriptRef:SetBool.html|SetBool]] の関数からそれぞれスクリプトで制御できます。

パラメータの隣にある値は、 [[AnimatorCurves|アニメーション カーブ]] によって上書き（またはブレンド）されないかぎり、スタート時のチェックされたデフォルト値となります。

したがって、シーンにおける完成したアニメーションつきキャラクターは、``Animator Component`` およびアニメータのパラメータを制御するスクリプトを、両方持つことになります。

Attach:MecanimAnimatorAndScript.png

次のスクリプト例ではユーザ入力にもとづいてイベントパラメータを修正します。

[@
public class AvatarCtrl : MonoBehaviour {

	protected Animator animator;

	public float DirectionDampTime = .25f;

	void Start ()
	{
		animator = GetComponent<Animator>();
	}

	void Update ()
	{
		if(animator)
		{
                        //現在のステートを取得
			AnimatorStateInfo stateInfo = animator.GetCurrentAnimatorStateInfo(0);

                        //"Run" モードのときは、ジャンプのユーザ入力を可能にして、ジャンプのパラメータもあわせてセット
        	        if(stateInfo.nameHash == "Base Layer.RunBT")
			{
				if(Input.GetButton("Fire1"))
                                    animator.SetBool("Jump", true );
			}
			else
			{
            	                animator.SetBool("Jump", false);
			}

         		float h = Input.GetAxis("Horizontal");
                	float v = Input.GetAxis("Vertical");

                        //ユーザ入力にもとづいてイベントパラメータをセット
			animator.SetFloat("Speed", h*h+v*v);
                        animator.SetFloat("Direction", h, DirectionDampTime, Time.deltaTime);
		}
	}
}
@]

([[Animation State Machines]] に戻る)
