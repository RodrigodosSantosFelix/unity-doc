! Replaced Shadersでのレンダリング / Rendering with Replaced Shaders

いくつかのレンダリングエフェクトは異なるセットのシェーダを用いてシーンをレンダリングする必要があります。例えば、優れたエッジ検出には、表面の凸凹が異なるエッジを検出するために、シーンに法線のあるテクスチャが必要です。他のエフェクトでも、シーンにデプスのあるテクスチャが必要だったり、と続いていきます。これを達成するためには、シーンを、全てのオブジェクトを置き換えたシェーダ（Replaced Shader）でレンダリングすることが出来ます。

シェーダの置き換えをスクリプティングで行うためには、[[ScriptRef:Camera.RenderWithShader.html|Camera.RenderWithShader]] または[[ScriptRef:Camera.SetReplacementShader.html|Camera.SetReplacementShader]] 関数を使用します。両方の関数は``shader`` と``replacementTag`` を使用します。

次のように動作します：カメラはシーンを通常にレンダリングします。オブジェクトはマテリアルを使用しますが、実際に使用されることになるシェーダが変更されます：
* ``replacementTag`` が空の場合、シーンの全てのオブジェクトは、指定されたReplaced Shaderでレンダリングされます。
* ``replacementTag`` が空でない場合、レンダリングされる各オブジェクトについて：
** オブジェクトの本当のシェーダの[[SL-SubshaderTags|tag value]] でクエリーされます。
** もしそのタグを持たない場合、オブジェクトは__レンダリングされません__ 。
** Replaced Shaderで指定されたタグの値での[[SL-SubShader|subshader]] が見つかります。もしそのようなSubShaderがない場合、オブジェクトは__レンダリングされません__ 。
** 次にそのSubShaderを使用してオブジェクトがレンダリングされます。

もし全てのシェーダが、例えば、"RenderType" タグの値に "Opaque" 、"Transparent" 、"Background" 、"Overlay"があった場合、不透明なオブジェクトのみレンダリングするReplacement Shaderを、RenderType=Solid [[SL-SubshaderTags|tag]] であるひとつのサブシェーダを使用して、記述することが出来ます。他のタグのタイプはReplacement Shaderで見つからないため、オブジェクトはレンダリングされません。あるいは複数のサブシェーダを、異なる"RenderType" のタグの値のために、記述することが出来ます。偶然に、全てのUnity内蔵シェーダは"RenderType" タグのセットを持っています。

!! Lit Shader Replacement

Shader Replacement を使用するとき、シーンはカメラで設定されたレンダリングパスを使用してレンダリングされます。つまり Replacement に使用されるシェーダは シャドウ および ライティングパス を含めることが出来るということです（サーフェイス シェーダ を Shader Replacement に使用できます）。これは特殊エフェクトのレンダリング および シーンのデバッグに便利です。

!! Unity内蔵シェーダでのReplacement Shaderタグ

全てのUnity内蔵シェーダは"$$RenderType$$" タグのセットを持ち、Replaced Shaderで使用することが出来ます。タグの値は次の通りです：
* ``Opaque``: ほとんどのシェーダ([[shader-NormalFamily|Normal]] 、[[shader-SelfIllumFamily|Self Illuminated]] 、[[shader-ReflectiveFamily|Reflective]] 、Terrainシェーダ)。
* ``Transparent``: ほとんどの部分的に透過なシェーダ([[shader-TransparentFamily|Transparent]] 、パーティクル、フォント、Terrain追加パスシェーダ)。
* ``TransparentCutout``: マスキングされた透過シェーダ([[shader-TransparentCutoutFamily|Transparent Cutout]] 、2パス植生シェーダ)。
* ``Background``: Skyboxシェーダ。
* ``Overlay``: GUITexture、ハロー、フレア　シェーダ。
* ``TreeOpaque``: TerrainエンジンTreeの樹皮。
* ``TreeTransparentCutout``:TerrainエンジンTree Leaves。
* ``TreeBillboard``: Terrainエンジン　ビルボードのTree。
* ``Grass``: TerrainエンジンのGrass。
* ``GrassBillboard``: Terrainエンジン　ビルボードのGrass。


!! 内蔵のシーン　デプス／法線　テクスチャ

カメラには内蔵で、どれかのエフェクトで必要な場合に、テクスチャのデプスまたはデプス＋法線をレンダリングする機能があります。[[SL-CameraDepthTexture | Camera Depth Texture]] を参照下さい。いくつかのケース（ハードウェアによって）、テクスチャのデプスまたはデプス＋法線は内部的にReplacement Shaderでレンダリングできることに留意して下さい。このためシェーダに正しい"$$RenderType$$" タグがあることが重要です。

