! プロシージャル マテリアル

Unity は $$Procedural Materials$$ と呼ばれる新しいアセットの種類を導入しています。これらは本質的に標準的なマテリアルと同じですが、それらが使用するテクスチャは、事前に定義されて格納されるのではなく、実行時に生成することができます。

テクスチャをプロシージャルに生成するスクリプトコードは一般的にストレージ上で使用する容量や転送量がビットマップ画像より小さく、このためプロシージャル マテリアルはダウンロード時間を節約できます。さらに、生成スクリプトはマテリアルの実行時の見栄えのプロパティに幅を持たせるためのパラメータを持たせることができます。これらのプロパティはカラーのバリエーションから壁のブロックのサイズまで種類があります。これはひとつのプロシージャル マテリアル から多くのバリエーションが生成できることを意味するだけでなくマテリアルをフレームごとの単位でアニメーションできるという意味です。多くの興味深い視覚効果が実現できます - 例えばキャラクターが徐々に石に変わったり、硫酸が表面に触れて傷つける瞬間を創造してみてください。

Unity のプロシージャル マテリアル システムは、 [[http://www.allegorithmic.com/|Allegorithmic]] によって開発された、 Substanceと呼ばれる業界標準の商品にもとづいています。


!!サポートされているプラットフォーム

Unityではプロシージャル マテリアルはスタンドアローンおよびWebPlayerビルド向けのターゲット（Windows および Mac OS X）で完全にサポートされています。他のすべてのプラットフォームでは、Unity は 事前レンダリングまたは通常のマテリアルへの ''焼きこみ'' をビルドの際に行います。これは実行時のプロシージャル生成の長所を打ち消すにも関わらず、エディタ上で基本的なマテリアルのバリエーションを作成するには便利です。


!!プロジェクトにプロシージャル マテリアルを追加する

プロシージャル マテリアルは Substance Archive ファイル (SBSAR) として提供されていて、他のアセット同様にインポートできます（Assets フォルダに直接ドラッグ＆ドロップするか、または、^^Assets->Import New Asset...^^ を使用します）。Substance Archive アセットはひとつ以上の プロシージャルマテリアル を含み、さらにこれが必要とする全てのスクリプトおよび画像を含みます。コンパイルされてない SBS ファイルは未サポートです。

別に実装されているにも関わらず、Unity は他のマテリアルと同様にプロシージャル マテリアルを取り扱います。例えばプロシージャルマテリアルをメッシュに割り当てるには、他のマテリアルと同様にメッシュ上にドラッグ＆ドロップするのみです。


!!プロシージャル プロパティ

各々のプロシージャル マテリアルは、特定のマテリアルの種類を生成するカスタムスクリプトです。これらのスクリプトがUnityスクリプトと共通しているのは、インスペクタ上に変数を公開して、アクセスすることができることです。たとえば、"レンガの壁" プロシージャル マテリアルによって プロパティを公開して、レンガの列の数、レンガの色、モルタルの色などセットすることが出来ます。潜在的には、ひとつのアセットから無限にマテリアルのバリエーションが作成できることになります。これらのプロパティは、MonoBehaviour スクリプトのパブリック変数と同様に、実行時にスクリプトからセットすることが出来ます。

さらにプロシージャル マテリアルは複雑なテクスチャ アニメーションを取り扱うことが出来ます。例えば、時計の針または床を這うゴキブリをアニメーションできます。

Attach:SubstanceCockroach.png


!!ゼロからプロシージャルマテリアルを作成

プロシージャルマテリアルはプロシージャルに生成されたテクスチャおよび格納されたビップマップの任意の組み合わせで動作します。さらに、含まれるビットマップ画像は使用前にフィルタリングおよび修正が出来ます。標準的なマテリアルと異なって、プロシージャル マテリアルは解像度に依存しないテクスチャとして、SVGファイルの形式でベクトル画像を使用できます。
ゼロからプロシージャルマテリアルを作成するために利用可能なデザイン ツール はアーティストの使用するツールと同様に 視覚的で、ノードベースの編集が出来ます。これによりコーディングがほとんど、または全く経験のないアーティストでも作成が可能となります。例として、Allegorithmic の Substance Designer により "レンガの壁" のプロシージャル マテリアル作成中のスクリーンショットを示します。

Attach:SubstanceDesigner.png


!!プロシージャル マテリアルの取得

Unity のプロシージャル マテリアルが業界標準の Substance 製品に基づいているため、 プロシージャル マテリアル アセットはインターネット上の情報から、すなわち Unity のアセットストアを含めて、ただちに利用可能です。Allegorithmic の Substance Designer を使用してプロシージャル マテリアル を作成できますが、Substance テクノロジーを取り扱う他のアプリケーション（例えば 3D モデリングアプリケーション）があり、同様にUnity と親和性があります。


!! パフォーマンスおよび最適化

プロシージャル マテリアルはビットマップ画像よりも少ない容量を使用する
Procedural Materials inherently tend to use less storage than bitmap images. However, the trade-off is that they are based around scripts and running those scripts to generate materials requires some CPU and GPU resources. The more complex your Procedural Materials are, the greater their runtime overhead.

Procedural Materials support a form of caching whereby the material is only updated if its parameters have changed since it was last generated. Further to this, some materials may have many properties that could theoretically be changed and yet only a few will ever need to change at runtime. In such cases, you can inform Unity about the variables that will not change to help it cache as much data as possible from the previous generation of the material. This will often improve performance significantly.

->Procedural Materials can refer to hidden, system-wide, variables, such as elapsed time or number of Procedural Material instances (this data can be useful for animations). Changes in the values of these variables can still force a Procedural Material to update even if none of the explicitly defined parameters change.

Procedural Materials can also be used purely as a convenience in the editor (ie, you can generate a standard Material by setting the parameters of a Procedural Material and then "baking" it). This will remove the runtime overhead of material generation but naturally, the baked materials can't be changed or animated during gameplay.


!!Using the Substance Player to Analyze Performance

Since the complexity of a Procedural Material can affect runtime performance, Allegorithmic incorporates profiling features in its ''Substance Player'' tool. This tool is available to download for free from [[http://www.allegorithmic.com/|Allegorithmic's website]].

Substance Player uses the same optimized rendering engine as the one integrated into Unity, so its rendering measurement is more representative of performance in Unity than that of Substance Designer.

