! キャッシュサーバー FAQ / Cache Server FAQ

!!! キャッシュサーバのDBサイズはインポートしたりリソースを保存したりするたびに無限にどんどん大きくなってしまうのでしょうか？
キャッシュサーバは自動的に一定周期に使われなくなったアセットを削除します（もちろん再度必要になれば、次に使われる間に再び作られるでしょう）。

!!! キャッシュサーバは Asset Server でしか動かないのですか？

キャッシュサーバはソースバージョンコントロールと切り離してデザインされているので、Unityの Asset Serverに制限されることはありません。

!!! 何を変更すると再生成するためにファイルがインポートされるのでしょうか？

Unity は一つのアセットをインポートしようとする際、元となる全てのデータのMD5ハッシュを生成します。

例えばテクスチャでは、以下のように成り立っています:
* 元となるアセット:  "myTexture.psd" ファイル
* メタファイル: "myTexture.psd.meta" （全てのインポート設定を保存しています）
* テクスチャインポーターの内部バージョン番号
* 全ての[[ScriptRef:AssetPostprocessor.html|AssetPostprocessors]] のバージョン番号のハッシュ

もしCache Serverに保存されているハッシュが違っていたら、アセットは再インポートされるか、キャッシュ化されたバージョンをダウンロードされます。クライアント側の Unity editor は必要な時にサーバーからアセットをプルする（持ってくる）だけです。つまりアセットはそれぞれのプロジェクトにプッシュすることはありません。

!!! 依存関係のあるアセットはどう扱ったら良いですか？

キャッシュサーバ は依存関係を関与しません。Unityのアセットパイプラインは依存関係のコンセプトを扱いません。アセット間の依存は避けるように作って下さい。``AssetPostprocessors`` はアセットインポートを自分用にカスタマイズする共通のテクニックです。 例えば、fbxファイルの決められた名前やタグで、GameObjectにMeshColliderを追加したりできます。

``AssetPostprocessors`` を使って、依存関係を明示的にすることは簡単にできます。例えば、テキストファイルからインポートされたゲームオブジェクトにコンポーネントを追加するデータを使います。これはCache Serverではサポートされません。もしキャッシュサーバを使いたいなら、プロジェクトフォルダの他のアセットへの依存関係を排除しなければなりません。キャッシュサーバは自分用のPostprocessorでの依存関係について何も知りませんので、古いバージョンのアセットをそのように変更しても知ることができないのです。

実践的な話で言えば、キャッシュサーバで動かすためのアセットポストプロセッサを走らせる方法はたくさんあります。
例えば:
* インポートされたアセットのパス
* アセットの全てのインポート設定
* 元となるアセット自身か、アセットポストプロセッサ内で生成されたデータ

!!!マテリアルで動かす際に問題がありませんか？
マテリアルを変更するには既知のトラブルあります。キャッシュサーバを使っていると、Unityはマテリアル参照を維持します。しかしポストプロセスがpostprocessing で呼ばれないので、キャッシュサーバを通してインポートされたモデルでは、マテリアルの内容は変更されることはありません。そのため、キャッシュサーバがある場合とない場合とで違う結果を得ることになるでしょう。これを避けるにはディスクに既に存在するマテリアルは修正しないことです。

!!! サーバーによってキャッシュされないアセットの種類はありますか？

サーバーにキャッシュされないいくつかのアセットの種類はあります。キャッシングスクリプトによって作られたものは、サーバーでは無視されるので、キャッシュされません。(Maya, 3D Max等の)3Dモデリングソフトで使われているネイティブのファイルはそのアプリケーション自体を使ってFBXにコンバートされます。現在サーバーでは、ネイティブのファイルとインポートプロセスで生成されたFBXファイルのどちらもキャッシュ化しません。しかし、モデリングソフトからFBXにエクスポートされたファイルをUnityプロジェクトに追加することでキャッシュ化が可能になります。
 
[[AssetCacheServer | アセット キャッシュサーバ]] も参照して下さい。
