! 値プロパティの編集 / Editing Value Properties

値プロパティはそれ自体は何も参照しないプロパティですが、すぐその場で修正することが可能なものです。 代表的な値プロパティには、数値、トグル、文字列、そして選択ポップアップがありますが、その他にも、色、ベクトル、カーブ、その他様々なものがあります。

Attach:Editor-Inspector.png\\
''インスペクターで表示される値プロパティには、数値、チェックボックス、文字列などがある''

多くの値プロパティにはテキストフィールドがあります。 その設定はとても簡単で、プロパティをクリックしたり、キーボードから値を入力したり、その値をセーブするために ^^Enter^^ キーを押すだけです。

* 数値プロパティの横にマウスカーソルを置き、左クリックをしながらドラッグをすると値を素早くスクロールすることができます。
* またいくつかの数値プロパティにはスライダーがありますので、それらを使って視覚的に値を調整することが可能です。

値プロパティの中には、小型のポップアップダイアログが開くものもあり、それらを使って値を修正することができます。

!! カラーピッカー（Color Picker）
$$Color$$ タイプのプロパティの場合、 $$Color Picker$$ がポップアップします。（Mac OS Xでは、使用するカラーピッカーをOSネイティブのカラーピッカーに変更することができます。その場合、 ^^Unity->Preferences^^ より、 ^^Use OS X Color Picker^^ を有効にします。）

カラーピッカーリファレンスは、インスペクターでは下のように表示されています:

Attach:Editor-ColorPickerReference.png\\
''インスペクター中でのカラーピッカーリファレンス''

そしてカラーピッカーを開きたい場合には、それをクリックします:

Attach:ColorPickerDescr.png\\
''カラーピッカーの説明''

$$Eyedropper Tool$$ は、欲しい色の上にマウスカーソルを持ってくることで、カラー値を知りたい時に使います。\\
$$RGB / HSV Selector$$ は、カラー値を ''赤、緑、青（RGB）'' から ''色相、彩度、明度（HSV）'' に切り替えます。\\
最後に、選択されているカラーの透明度は、 $$Alpha Channel$$ の値によって調整することができます。


!! カーブエディタ（Curve Editor）
$$AnimationCurve$$ タイプのプロパティでは、 $$Curve Editor$$ がポップアップします。 カーブエディタを使うことで、カーブを編集したり、プリセットから選んだりすることができます。 カーブの編集に関するさらに詳しい情報は、 [[EditingCurves| Editing Curves]] のガイドを参照してください。

伝統的に、このタイプのプロパティは AnimationCurve と呼ばれていますが、実はカスタムカーブ関数として定義できるものなら、何にでも使うことができます。 そして関数の評価は、ランタイム時にスクリプトから実行できます。

アニメーションカーブプロパティは、インスペクター上では小さいプレビューとして表示されています:
Attach:Editor-PopupCurve.png\\
''インスペクター上でのアニメーションカーブのプレビュー''

その上をクリックすると、カーブエディタが開きます:

Attach:CurveEditorPopupDescr.png\\
''カーブエディタはアニメーションカーブを編集するのに使います。''

$$Wrapping Mode$$ は、ピンポン、クランプ、カーブ中のコントロールキー間でのループ、のいずれかより選ぶことができます。\\
$$Presets$$ から、いくつかの初期設定アウトラインに沿って、カーブの形状を修正できます。

!! グラディエントエディタ（Gradient editor）

グラフィックやアニメーション中で、空間や時間の進行に合わせて、あるカラーから別のカラーへ徐々にブレンドしていくという表現が使えると、とても便利です。 $$gradient$$ は、カラー推移の視覚表現で、複数のメインカラー（これらを $$基準カラー（stops）$$ と呼びます）と、それらの間に挟まれた全ての中間色調をシンプルに配置したものとなっています。 Unityでは、グラディエントは下図のようなグラディエント専用の特別な値エディタを持っています。

Attach:GradientDiagram.png

グラディエントバーの下部に沿って配置されている上向きの矢印は、基準カラーを意味しています。 基準カラーのひとつの上でクリックすることで、それを選択することができます。するとその値がカラーボックスの中に表示されます。カラーボックスをクリックすれば通常のカラーピッカーが開きます。 新しく基準カラーを作りたい場合には、グラディエントバーの下部をクリックします。 おのおのの基準カラーの位置は、クリックしてドラッグすることで簡単に移動することができます。 そして ^^ctrl/cmd + delete^^ で、選択した基準カラーを削除できます。

グラディエントバー上部にある下向きの矢印もまた基準値を表していますが、こちらはその地点におけるグラディエントのアルファ値（透明度）に対応しています。 初期状態では、２つの基準値があり、アルファ値100％（すなわち、完全不透明）に設定されています。 こちらも基準カラーと同じように、基準値をいくらでも追加したり、編集したりすることが可能です。

!!配列

自身で記述したスクリプトによりネイティブの.NET配列をインスペクタにて開放出来ます。インスペクタが配列を発見すると配列のサイズを指定出来るようにします。配列サイズのデフォルトはゼロです。サイズをゼロより大きく指定すると配列要素をの値を入力するスロットをインスペクタが生成します。もしUnityで既知のデータ型を指定すると適切の値エディタを挿入します。例えば:

(:code:)
var pickupColors : Color32[];
(:codeend:)

このコードにより配列の各要素について カラーピッカー エディタが生成されます。
