!! 応用


!!! コライダの組み合わせ

Unity上で複数の異なる衝突の組み合わせがありえる。それぞれのゲームで追求する内容は異なるので、ゲームのタイプによって組み合わせの良し悪しが決まってくる。ゲームで物理挙動を使用している場合、基本的なコライダの種類を理解し、主な働き、使用例、他のオブジェクトとの相互作用について理解を深める必要がある。



!!!! スタティックコライダ

__リジッドボディを含まない__が、__コライダを含む__ゲームオブジェクトについて考えます。これらのオブジェクトは動かない、あるいは動くとしてもわずかであることが望ましいです。これらは背景のオブジェクトとして最適である。リジッドボディと衝突したとしても動きません。


!!!! 
リジッドボディコライダ

リジッドボディとコライダ双方を含むゲームオブジェクトについて考えます。これらのオブジェクトは物理エンジンに影響を受け、加えられた力や衝突によって軌道が変化します。またコライダを含むゲームオブジェクトと衝突させることが出来ます。多くの場合は物理エンジンを使用したい場合の主要なコライダとなります。


!!!! キネマティック　リジッドボディコライダ

''IsKinematic''がオンとなっているリジッドボディとコライダ双方を含みゲームオブジェクトについて考えます。このオブジェクトを動かすためには力を加えるのではなく[[class-Transform|トランスフォーム]] コンポーネントの値を書き換えて移動させます。スタティックコライダを共通点が多いがコライダを頻繁に動かしたい場合に役立ちます。その他、このオブジェクトを使用するのが適切なシナリオはいくつか考えられます。

このオブジェクトはスタティックコライダにトリガーイベントを発行したい場合に役立つ。トリガーはリジッドボディを含む必要があるためリジッドボディをアタッチしたうえで''IsKinematic''をオンに設定する。これによりオブジェクトが物理挙動の影響を受けず、必要なときにトリガーイベントを受け取ることが出来るようになる。

キネマティック　リジッドボディは簡単にオンオフを切り替えることが出来る。これはラグドール作成に大いに役立ち、たとえばキャクラターがある場面まではアニメーションどおりに動作し、その後に衝突によって爆発や何らかのエフェクトを起こしその後はラグドールの動作をさせたい場合に役立つ。

リジッドボディを長時間動かさない場合、完全にスリープ状態とさせることができる。言い換えると物理挙動のアップデート処理のなかで値が更新されることはなく、位置もそのままとなる。キネマティックリジッドボディコライダを通常のリジッドボディコライダの外に移動する場合、スリープ状態は解除され物理挙動のアップデート処理が再び始まる。つまり動かしたいスタティックコライダが複数あり、その上に異なるオブジェクトを落としたい場合にはキネマティック　リジッドボディコライダを使用すべきである。

!!! 衝突アクションマトリクス

衝突する2つのオブジェクトの設定によっては同時に複数のアクションが走る可能性がある。以下のチャートにより二つのオブジェクトが衝突する際の動作をアタッチされているコンポーネント等を基準に整理しました。いくつかの組み合わせにおいては片方のオブジェクトのみ衝突の影響を受けるので、原則として「オブジェクトにリジッドボディがなければ物理挙動もない」ということをよく頭に入れておく必要がある。


|| border = 2
|| __衝突により衝突メッセージを受け取るか？__ ||||||||||||||
|| ||Static Collider ||Rigidbody Collider ||Kinematic [[<<]] Rigidbody Collider ||Static [[<<]] Trigger Collider ||Rigidbody [[<<]] Trigger Collider ||Kinematic Rigidbody [[<<]] Trigger Collider ||
||Static Collider                      ||   || Y ||   ||   ||   ||   ||
||Rigidbody Collider                   || Y || Y || Y ||   ||   ||   ||
||Kinematic Rigidbody Collider         ||   || Y ||   ||   ||   ||   ||
||Static Trigger Collider              ||   ||   ||   ||   ||   ||   ||
||Rigidbody Trigger Collider           ||   ||   ||   ||   ||   ||   ||
||Kinematic Rigidbody Trigger Collider ||   ||   ||   ||   ||   ||   ||


|| border = 2
|| __衝突によりトリガーメッセージは発行されるか？__ ||||||||||||||
|| ||Static Collider ||Rigidbody Collider ||Kinematic [[<<]] Rigidbody Collider ||Static [[<<]] Trigger Collider ||Rigidbody [[<<]] Trigger Collider ||Kinematic Rigidbody [[<<]] Trigger Collider ||
||Static Collider                      ||   ||   ||   ||   || Y || Y ||
||Rigidbody Collider                   ||   ||   ||   || Y || Y || Y ||
||Kinematic Rigidbody Collider         ||   ||   ||   || Y || Y || Y ||
||Static Trigger Collider              ||   || Y || Y ||   || Y || Y ||
||Rigidbody Trigger Collider           || Y || Y || Y || Y || Y || Y ||
||Kinematic Rigidbody Trigger Collider || Y || Y || Y || Y || Y || Y ||

!!! [[LayerBasedCollision | レイヤーベースコリジョン]]
Unity3.Xでは$$レイヤーベースコリジョン$$が機能として追加されましたので、すべてのレイヤーの組み合わせにおいて、どのレイヤーの組み合わせでは衝突が発生するかオブジェクトに設定を行うことができます。詳細情報については[[LayerBasedCollision | ここ]] をクリックし参照のこと。