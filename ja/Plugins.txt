! プラグイン (Pro/モバイル専用) / Plugins (Pro/Mobile-Only Feature)

UnityはC、C++、Objective-C等で記述されたライブラリを $$Plugins$$ でサポートしています。プラグインはゲームのコード（JavaScriptやC#、Booで記述されている）からライブラリの関数を呼び出すことができます。この機能はUnityをミドルウェアライブラリや既存のC/C++コードと統合することができます。

__Note:__ デスクトッププラットフォームでは、プラグインはPro専用の機能です。またセキュリティ的な理由によりプラグインはWebplayerでは利用できません。

プラグインを使うためには、以下の2つの作業を行う必要があります。

* C言語を基準とした言語で記述後コンパイルし、ライブラリに含める
* ライブラリの関数を呼び出すC#スクリプトを記述する

プラグインは単純なC言語で書かれたインターフェースをC#や他のスクリプトに提示します。さらに、Unityでは特定の低レベルのレンダリングイベントが発生した時（例えばグラフィックデバイスを生成した時）にエクスポートした関数を呼び出すことも可能です。詳細は [[Native Plugin Interface]] ページを確認してください。


非常にシンプルな例:


!!! 単純なCファイルプラグイン:

[@float FooPluginFunction () { return 5.0F; } @]

!!! C#のスクリプトからプラグインを利用する:


[@using UnityEngine;
using System.Runtime.InteropServices;

class SomeScript : MonoBehaviour {

   #if UNITY_IPHONE || UNITY_XBOX360
   
   // iOSやXbox 360のプラグインは静的に実行可能ファイルに
   // リンクされます、 そのため、ライブラリ名に__Internalを
   // 使用する必要があります。
   [DllImport ("__Internal")]

   #else

   // 他のプラットフォームは動的なので、プラグインの
   // 動的ライブラリ(dynamic library)の名前を渡します。
   [DllImport ("PluginName")]
	
   #endif

   private static extern float FooPluginFunction ();

   void Awake () {
      // プラグインのFooPluginFunctionを呼び出し、
      // コンソールに5と出力します。
      print (FooPluginFunction ());
   }
} @]

Javascriptを使用しているときDLLの名前（DLLName）がpluginである場合、あるいは "__Internal" で静的にリンクしたネイティブコードを書いている場合は、次の構文を書く必要がある事に注意してください。

[@@DllImport (DLLName)
static private function FooPluginFunction () : float {};@]

!! プラグインの作成

一般的には、プラグインは、ターゲットプラットフォーム上でネイティブコードコンパイラを使って構築されています。プラグインの関数はC言語に基づいたコール·インタフェース（C-based call interface）を使用するので、C++やObjective-Cを使用した場合はネーム・マングル（name mangling）の問題を避けなければなりません。

詳細と例については、次のページを参照してください:-

>>desktop<<
* [[PluginsForDesktop | Building Plugins for Desktop Platforms]]
>><<
>>ios<<
* [[PluginsForIOS | Building Plugins for iOS]]
>><<
>>android<<
* [[PluginsForAndroid | Building Plugins for Android]]
>><<
>>xbox360<<
* [[PluginsForXbox360 | Building Plugins for Xbox 360]]
>><<
>>ps3<<
* [[ps3-nativeplugins | Building Plugins for PlayStation3]]
>><<

!! 追加情報
* [[Native Plugin Interface]] - プラグインでレンダリングを行いたい場合に必要です。
* [[http://www.mono-project.com/Interop_with_Native_Libraries|Mono Interop with native libraries]].
* [[http://msdn2.microsoft.com/en-us/library/fzhhdwae.aspx|P-invoke documentation on MSDN]].
