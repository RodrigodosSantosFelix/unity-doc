!ジェネリック関数 / Generic Functions

スクリプトリファレンスのいくつかの関数（例えば、様々なGetComponent関数）はTまたは型名を関数名の後に <> 記号で記されている変種があります:-

[@
function FuncName.<T>(): T;
@]

これらはジェネリック関数として知られています。これらのスクリプティングにおける重要性はパラメータの型かつ（または）関数の戻り値の型をを指定できることです。JavaScriptでは、ダイナミックタイピングの制約を回避するために使用することが出来ます:-

[@
// 関数コールで定義されているため、型は正しく推論できる。
var obj = GetComponent.<Rigidbody>();
@]
C#では、多くの文字入力やキャストを節約できます:-
[@
Rigidbody rb = go.GetComponent<Rigidbody>();

// ...次と比べて下さい:-

Rigidbody rb = (Rigidbody) go.GetComponent(typeof(Rigidbody));
@]
スクリプト リファレンスに書かれている、ジェネリックの変種をもった関数は、全てこの特別なコールの構文を使用することが出来ます。