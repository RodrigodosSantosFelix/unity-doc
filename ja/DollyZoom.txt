! ドリー ズーム（別名 "トロンボーン" エフェクト）

ドリーズームは良く知られた視覚エフェクトで、カメラがオブジェクトに向かうと同時にズームアウトするものです。この結果はオブジェクトがほとんど同じ大きさとなりますが、シーンの他の全てのオブジェクトのパースペクティブが変更されます。さりげなく行うことで、ドリー ズームは、イメージの中で唯一位置が移動しないものであるため、ターゲットオブジェクトをハイライトする効果があります。別の手段として、ズームを意図的に素早く行って方向感覚を失った印象を作り出すことが出来ます。

Frustumの中に縦方向にちょうどおさまるオブジェクトは画面でみたとおりにビューの高さ全体を占めます。これはオブジェクトのカメラからの距離がいくつであっても、Field of Viewが何であっても変わりません。例えば、カメラをオブジェクトに近づけて、Field of Viewを広げてオブジェクトがちょうどFrustumの高さにちょうどおさまるようにすることが出来ます。その特定のオブジェクトは画面上で同じ大きさで表示されますが、その他の全ては距離およびField of Viewの変更に伴ってサイズが変更されます。これはドリー ズーム効果の最重要点です。

Attach:EqualFrustumHeight.png

コードでこのエフェクトを作成するには、ズーム開始時のオブジェクトの位置におけるFrustm の height を保存することになります。次に、カメラが移動するにつれ、新しい距離が見つかり、そしてオブジェクトの位置と同じ高さであるようにField fo Viewは保持されます。これは次のようなコードにより実現できます:-

[@var target: Transform;

private var initHeightAtDist: float;
private var dzEnabled: boolean;


// カメラから一定の距離のFrustumのHeightを計算
function FrustumHeightAtDistance(distance: float) {
	return 2.0 * distance * Mathf.Tan(camera.fieldOfView * 0.5 * Mathf.Deg2Rad);
}


// 一定の距離でのFrustm の Heightとなるために必要なField of View (FOV) を計算
function FOVForHeightAndDistance(height: float, distance: float) {
	return 2 * Mathf.Atan(height * 0.5 / distance) * Mathf.Rad2Deg;
}


// ドリー ズーム エフェクトを開始
function StartDZ() {
	var distance = Vector3.Distance(transform.position, target.position);
	initHeightAtDist = FrustumHeightAtDistance(distance);
	dzEnabled = true;
}


// ドリー ズーム をオフに変更
function StopDZ() {
	dzEnabled = false;
}


function Start() {
	StartDZ();
}


function Update () {
	if (dzEnabled) {
		// 新しい距離を計り、Field of View (FOV) をそれにあわせて再調整
		var currDistance = Vector3.Distance(transform.position, target.position);
		camera.fieldOfView = FOVForHeightAndDistance(initHeightAtDist, currDistance);
	}
	
	// カメラが 上下のカーソルキーにより前後に移動するための制御
	transform.Translate(Input.GetAxis("Vertical") * Vector3.forward * Time.deltaTime * 5);
}@]
