!ShaderLab 定義済みの値

Unityはたくさんの定義済みの値をシェーダで用意しています。例えば、現在のオブジェクトの変換行列、時間、等。

他のプロパティと同じようにShaderLabで使用するのみで、唯一の違いはどこかで宣言する必要がなく、すでに"定義済み"です。

[[SL-ShaderPrograms | Programmable Shaders]] で使用する場合は [[SL-BuiltinIncludes | $$UnityCG.cginc$$ file]] をインクルードする必要があります。.

!! 変換

: ``float4x4 UNITY_MATRIX_MVP`` : 現在のモデルビュー行列×射影行列（model*view*projection）
: ``float4x4 UNITY_MATRIX_MV`` : 現在のモデルビュー行列
: ``float4x4 UNITY_MATRIX_P`` : 現在の投影行列
: ``float4x4 UNITY_MATRIX_T_MV`` : モデルビュー行列の転置行列
: ``float4x4 UNITY_MATRIX_IT_MV`` : モデルビュー行列の逆行列の転置行列
: ``float4x4 UNITY_MATRIX_TEXTURE0`` to ``UNITY_MATRIX_TEXTURE3`` : テクスチャの転置行列
: ``float4x4 _Object2World`` : 現在のモデル行列
: ``float4x4 _World2Object`` : 現在のモデル行列の逆行列
: ``float3 _WorldSpaceCameraPos`` : ワールド座標系のカメラの位置
: ``float4 unity_Scale`` : @@xyz@@ コンポーネントを使用せず、@@.w@@ が均一に拡大・縮小するスケールを保持しています

!!!ライティング

シンプルなShadelabでは、次のプロパティにアクセスするには末尾に0を付与、すなわちライトのModel×LightColorは@@_ModelLightColor0@@ となります。Cgシェーダでは、ひとつの要素をもった配列としてアクセスできるため、Cgでの相当する表現は@@_ModelLightColor[0]@@ です。

|| __Name__ || __Type__ || __Value__ ||
||_ModelLightColor ||float4 ||マテリアルのModel×Light color。||
||_SpecularLightColor ||float4 ||マテリアルのSpecular×Light color。||
||_ObjectSpaceLightPos ||float4 ||オブジェクト座標系でのライトの位置。''w''コンポーネントが 0 の場合は指向性ライト、1 の場合はその他のライト。||
||_Light2World ||float4x4 ||ライトからワールド座標系の行列。||
||_World2Light ||float4x4 ||ワールドからライト座標系の行列。||
||_Object2Light ||float4x4 ||オブジェクトからライト座標系の行列。||

!! その他、様々

* ``float4 _Time`` : 時間 (t/20、t、t×2、t×3)、シェーダの中でアニメーションするのに使用。
* ``float4 _SinTime`` : 時間のサイン関数: (t/8、t/4、t/2、t)
* ``float4 _CosTime`` : 時間のコサイン関数: (t/8、t/4、t/2、t)
* ``float4 _ProjectionParams`` : \\
  @@x@@ は 1.0 または -1.0、反転した射影行列で現在レンダリングしている場合は負の値。
  @@y@@ は カメラのNear Plane \\
  @@z@@ は カメラのFar Plane \\
  @@w@@ は 1/Far Plane。
* ``float4 _ScreenParams`` : \\
  @@x@@ は 現在のレンダリングターゲットのピクセル幅 \\
  @@y@@ は 現在のレンダリングターゲットのピクセル高さ \\
  @@z@@ は 1.0 + 1.0/幅 \\
  @@w@@ は 1.0 + 1.0/高さ