! シェーダ / Shaders

全ての Unity のレンダリングは ''シェーダ'' により行われます - すなわち、グラフィックス ハードウェアがレンダリングをどうセットアップすべきか設定することのできる短いスクリプトです。Unity は出荷時に 80 以上のビルトイン シェーダが含まれます（ドキュメントは [[Built-in Shader Guide]] ）。これを拡張するには自身のシェーダを作成します。

Unityのシェーダは3種類の方法のいずれかで書くことが出来ます:

!!! サーフェイス シェーダ

[[SL-SurfaceShaders | Surface Shaders]] は ''もしシェーダがライトおよびシャドウの影響を受ける必要がある場合'' にベストのオプションです。サーフェイス シェーダにより複雑なシェーダをコンパクトな方法で書くことを容易にします - Unityのライティングパイプラインに対して、より高いレベルの抽象化がされています。ほとんどのサーフェイスシェーダは自動的に Forward および Deffered Lightingをサポートします。サーフェイス シェーダを __Cg/HLSL__ ではかなり行数で書き、さらにそこからより多くのコードが自動生成されます。

もしシェーダがライトで何もしない場合は、サーフェイス シェーダを使用 "しないで" ください。[[comp-ImageEffects|Image Effects]] および多くの特殊効果シェーダでは、サーフェイス シェーダは次善策のオプションであり、あまり良い理由なく非常にたくさんのライティング計算を行うことになります。


!!! 頂点およびフラグメントシェーダ

もしシェーダがライティングと作用する必要がない、またはサーフェイス シェーダではハンドリングできないとてもエギゾチックなエフェクトが必要である場合、頂点およびフラグメントシェーダは必要となります。この方法で書かれたシェーダプログラムは必要なエフェクトを作成するもっとも柔軟な方法です（サーフェイス シェーダでさえ自動的に大量の頂点およびフラグメントシェーダに変換されます）が、これにはコストが伴います:より多くのコードを記述する必要があり、ライティングと作用させることは難しくなります。これらのシェーダもまた __Cg/HLSL__ で記述されます。


!!! 固定関数シェーダ

固定関数シェーダは、プログラマブル シェーダをサポートしない古いハードウェアのために記述する必要があります。固定関数シェーダはしゃれたフラグメントシェーダまたはサーフェイスシェーダの後の n 番目の fallback とし記述して、古いハードウェアやシンプルなモバイルプラットフォームで実行したときも何か意味のあるレンダリングを行えるようにします。固定関数シェーダは完全に __ShaderLab__ と呼ばれる言語で書かれ、これはMicrosoftの .FX ファイルまたは NVIDIAの CgFX に似ています。


!! ShaderLab

どのタイプを選んだとしても、シェーダ コードの実際の本体は ShaderLab で常にラッピングされ、シェーダ構造を整理するためにこれを使用します。次のようなものです:

[@Shader "MyShader" {
    Properties {
        _MyTexture ("My Texture", 2D) = "white" { }
        // カラーやベクトルなどのプロパティもこの箇所に記述
    }
    SubShader {
        // この箇所に以下の本体を記述
        //  - サーフェイスシェーダ または
        //  - 頂点およびフラグメントシェーダ または
        //  - 固定関数シェーダ
    }
    SubShader {
        // この箇所に、古いグラフィックスカードで実行される、より簡易のバージョンの前述のサブシェーダを記述
    }
} @]

最初は ShaderLab 文法の基本コンセプトについて [[SL-Shader | ShaderLab リファレンス]] で読んで、それから下に並ぶチュートリアルに進むことを推奨します。

チュートリアルは様々な種類のシェーダに関する多くの例を含みます。さらにサーフェイスシェーダに特化したより多くのサンプルについては、 [[http://www.unity3d.com/support/resources/assets/built-in-shaders | リソース セクション]] でビルトイン シェーダのソースコードが入手できます。 Unityの [[comp-ImageEffects | Image Effects]] パッケージにはたくさんの興味深い頂点およびフラグメントシェーダを含みます。

シェーダの紹介については読み進めて、 [[SL-Reference | shader reference]] に目を通して下さい。

* [[ShaderTut1 | Tutorial: ShaderLab および 固定関数シェーダ]] 
* [[ShaderTut2 | Tutorial: 頂点およびフラグメントシェーダ]] 
* [[SL-SurfaceShaders | サーフェイス シェーダ]] 
