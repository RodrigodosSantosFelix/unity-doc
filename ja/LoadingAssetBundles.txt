! アセットバンドルからのオブジェクトをロード、アンロード / Loading and unloading objects from an AssetBundle

ダウンロードしたデータから作成したアセットバンドルからのオブジェクトがあると、三種類の方法でオブジェクトをロードできます:

* [[ScriptRef:AssetBundle.Load.html|AssetBundle.Load]] で名前の識別子を引数として使って、オブジェクトをロードします。名前はプロジェクトビューで表示されているものです。オプションとして、オブジェクトの種類を引数としてLoadメソッドに渡すことでロードされたオブジェクトが特定の種類であるかチェックすることが出来ます。

* [[ScriptRef:AssetBundle.LoadAsync.html|AssetBundle.LoadAsync]] は前述のLoadメソッドと同様に動作しますが、アセットがロードされるときにメインのスレッドをブロックしません。これは大きなアセットや複数のアセットを同時にロードするときに、アプリケーションがポーズすることを避けるのに便利です。

* [[ScriptRef:AssetBundle.LoadAll.html|AssetBundle.LoadAll]] によりアセットバンドルに含まれるすべてのオブジェクトをロードします。 AssetBundle.Load と同様にオブジェクトをタイプによってオブジェクトをフィルタリングできます。

アセットをアンロードするためには [[ScriptRef:AssetBundle.Unload.html|AssetBundle.Unload]] を使用する必要があります。このメソッドはbooleanの引数によりUnityで全てのデータをアンロードするかどうか（ロードされたアセットのオブジェクトを含めて）か、または、ダウンロードされたバンドルから圧縮されたデータのみをアンロードするか指定します。もしアプリケーションがアセットバンドルから何らかのオブジェクトを使用していて、メモリを解放したい場合、Falseを渡してメモリから圧縮されたデータをアンロードできます。もしアセットバンドルから完全に全てをアンロードしたい場合、Trueを渡して、アセットバンドルからロードされたアセットを破棄します。

!! アセットバンドルからオブジェクトを非同期ロード

[[ScriptRef:AssetBundle.LoadAsync.html|AssetBundle.LoadAsync]] メソッドを使用してオブジェクトを非同期ロードできて、アプリケーションが飛び飛びにおかしくなる可能性を減らします。

[@using UnityEngine;

// 注意: このサンプルはエラーチェックを行いません。詳細についてはDownloadingAssetBundlesのサンプルを参照下さい。
IEnumerator Start () {
	// 特定URLからダウンロードを開始
	WWW www = WWW.LoadFromCacheOrDownload (url, 1);

	// ダウンロード完了を待機
	yield return www;

	// アセットバンドルをロードし取得
	AssetBundle bundle = www.assetBundle;

	// オブジェクトを非同期ロード
	AssetBundleRequest request = bundle.LoadAsync ("myObject", typeof(GameObject));

	// 完了を待機
	yield return request;

	// ロードされたオブジェクトの参照を取得
	GameObject obj = request.asset as GameObject;

        // メモリ節約のため圧縮されたアセットバンドルのコンテンツをアンロード
        bundle.Unload(false);
}@]

[[AssetBundlesIntro|アセットバンドル入門]] に戻る
