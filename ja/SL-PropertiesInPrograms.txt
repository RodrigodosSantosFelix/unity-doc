! Cgでのシェーダプロパティ参照

Shaderはマテリアルプロパティを[[SL-Properties | Properties]] ブロックで宣言します。もし[[SL-ShaderPrograms | shader program]] でアクセスしたい場合、 Cg/HLSL変数を同じ名前とマッチングするタイプで宣言する必要があります。例については[[ShaderTut2 | Shader Tutorial: Vertex and Fragment Programs]] を参照下さい。

例えば次のシェーダプロパティ
[@
_MyColor ("Some Color", Color) = (1,1,1,1) 
_MyVector ("Some Vector", Vector) = (0,0,0,0) 
_MyFloat ("My float", Float) = 0.5 
_MyTexture ("Texture", 2D) = "white" {} 
_MyCubemap ("Cubemap", CUBE) = "" {} 
@]
について、Cg/HLSLで参照するために宣言するコードは：
[@
fixed4 _MyColor; // low precision type is enough for colors
float4 _MyVector;
float _MyFloat; 
sampler2D _MyTexture;
samplerCUBE _MyCubemap;
@]

Cgは$$uniform$$キーワードを記述できますが、必須ではありません：
[@
uniform float4 _MyColor;
@]

ShaderLabのプロパティタイプはCg/HLSL変数タイプとの対応は次のようにマッピングされます：
* ColorとVectorプロパティは、$$float4$$、$$half4$$あるいは$$fixed4$$変数に対応
* RangeとFloatプロパティは、$$float$$、$$half$$あるいは$$fixed$$変数に対応
* Textureプロパティは、通常（2D）のテクスチャの場合は$$sampler2D$$変数に対応、3Dテクスチャの場合は$$sampler3D$$変数に対応
