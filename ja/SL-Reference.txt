シェーダ リファレンス

Unity のシェーダは、次の 3 つの方法のいずれかで記述できます。

* __表面シェーダ__として
* __頂点および断片シェーダ__として
* __固定関数シェーダ__として

ニーズに応じた適切なタイプを選ぶには、[[Shaders | shader tutorial]] を参照してください。

選択したタイプに関係なく、シェーダ コードの実際の本体は、ShaderLab と呼ばれる言語で常にラップされます。これは、シェーダ構造を整理するのに使用されます。 以下のような感じになります。

[@Shader "MyShader" {
    Properties {
        _MyTexture ("Texture", 2D) = "white" {}
        // 色やベクトルなどのその他のプロパティはここでもうまく行きます。
    }
    SubShader {
        // ここで、表面シェーダまたは、
        //  頂点および断片シェーダ、または、
        // - 頂点およびプログラム シェーダまたは
        //  なります。
    }
    SubShader {
        // より古いグラフィック カードで実行できる、上記サブシェーダのもっと簡単なものを始めましょう。
    }
} @]

最初に下記のセクションで ShaderLab 構文の基本的なコンセプトを読んでから、他のセクションで表面シェーダまたは頂点および断片シェーダに移ることをお勧めします。 固定関数シェーダは ShaderLab のみを用いて記述されているため、ShaderLab のリファレンスに詳細が記載されています。

下記のリファレンスには、各種シェーダのサンプルが多く含まれています。 特に、表面シェーダのサンプルについては、[[http://www.unity3d.com/support/resources/assets/built-in-shaders | Resources section]] から、Unity の組み込みシェーダのソースを利用できます。 Unity の [[comp-ImageEffects | Image Effects]] パッケージには、多くの興味深い頂点および断片シェーダが含まれています。

シェーダ リファレンスを読んでから、[[Shaders | shader tutorial]] を参照してください。


(:tocportion:)

