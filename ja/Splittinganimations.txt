! アニメーションの分割 / Splitting Animations

アニメーションつきのキャラクターは一般に複数の動作があり、ゲームの中で異なる状況下で使用される。例えば、歩く、走る、ジャンプする、投げる、死ぬ、等々に別のアニメーションが必要かもしれません。モデルがアニメーションされた方法によって、これら別々の動きは独自のアニメーションクリップとしてインポートするか、ひとつのクリップとして、一つの動作の後に次の動作が来るようになります。ひとつのクリップしかない場合、クリップはUnity上でアニメーションシーケンスのコンポーネントとして __分割__ する必要があり、ワークフローとして追加のステップが必要になるかもしれません。

!!事前に分割されたアニメーションつきモデルでの作業

作業するうえで、もっともシンプルなモデルの種類とは、事前に分割されたアニメーションを含むものです。こういうアニメーションがある場合、 ~~Animation Importer Inspector~~ の~~Animations~~ タブは次のようになります：
Attach:MecanimImportPreSplitAnimation.png

 ~~Preview Window~~ （Inspectorの下の方）には利用可能なクリップが表示され、でPlayを押すことでプレビューできます。クリップのフレーム範囲は必要であれば編集することが出来ます。

!!分割されてないアニメーションつきモデルでの作業

クリップがひとつの連続したアニメーションとして提供されているクリップのモデルについては、 ~~Animation Importer Inspector~~ の~~Animations~~ タブは次のようになります：

Attach:MecanimImportAnimationNoSplit.png

このようなケースでは、各個別のアニメーションシーケンスに対応するフレーム範囲を定義することが出来ます。（歩く、ジャンプする、その他）。新規のアニメーションを作成するには(+)を作成して、そこに含まれるフレームの範囲を選択します。

例えば：
* 歩くアニメーションはフレーム 1 - 33
* 走るアニメーションはフレーム 41 - 57
* キックするアニメーションはフレーム 81 - 97


Attach:MecanimImportAnimationSplitting.png\\
''アニメーションのImport Settingsオプション''

Import Settings
インポート設定（Import Settings）では、 ``Split Animations`` テーブルによりUnityにアセットファイルのどのフレームがどのアニメーションクリップを構成しているかを知らせます。ここで指定した名前はゲームで有効化するのに使用されます。

||PROPS
||``name``        ||Unityの中でのアニメーションクリップの名前を定義します。||
||``Start`` ||アニメーションの最初のフレーム。フレーム番号は、アニメーションを作成した3Dプログラムと同じフレームを指しています。 ||
||``End``  ||アニメーションの最後のフレーム。 ||
||``Wrap Mode``   ||このクリップのプレイバック範囲が終わったときの処理方法を定義します(Once, Loop, PingPong, ClampForever)。||
||``Add Loop Frame``  ||有効化した場合、追加の ``Loop Frame`` （ループフレーム）がアニメーションの最後に挿入されます。このフレームはクリップの最初のフレームをマッチングします。ループアニメーションが必要で、最初および最後のフレームが上手に一致しない場合に使用して下さい。||

!!メカニム アニメーションのアニメーションクリップで作業をする
Attach:MecanimImportChristmasTree.png

||PROPS
||``Lock Pose``        ||ポーズをロックする。 ||
||``Lock Root Rotation`` ||ルートの回転をロックする。||
||``Lock Height``  ||高さをロックする。 ||
||``Lock Root Position``   ||ルート位置をロックする。||
||``Rotation Offset``  ||回転のオフセット。||
||``Cycle Offset``  ||サイクルのオフセット。||
||``Mirror``  ||ミラー ||
||``Body Mask``||このアニメーションクリップが影響する体のパーツ
||``Curves``||パラメータのカーブ


[[#ImportModelNoAnims]]

!! アニメーションを含まないモデルへのアニメーション追加
マッスル定義のない（例えば、非メカニム）モデルの ``Animation`` コンポーネントにアニメーションクリップを追加することが出来ます。``Animation`` プロパティでデフォルトのアニメーションクリップを、``Animations`` プロパティに利用可能なアニメーションクリップを、それぞれ指定する必要があります。非メカニムのモデルに追加するアニメーションクリップもまた、非メカニムである方法でセットアップすべきです（すなわち ``Muscle Definition`` プロパティは ``None`` にセットすべきです）。

マッスル定義のあるモデル（メカニム）については、プロセスが異なります:-

* ``新規の Animator Controller`` を作成します。
* ~~Animator Controller Window~~ を開きます。
* 希望のアニメーションクリップを ~~Animator Controller Window~~ にドラッグします。
* Hierarchyビュー上にモデル アセットをドラッグします。
* アセットの``Animator component`` にアニメータコントローラを追加します。

[[#ImportFile]]

!!!複数のモデルファイルを用いたアニメーションのインポート

アニメーションをインポートするもう一つの方法は、Unityがアニメーションファイルに対して許容しちえるネーミング標準に従うことです。別々のモデルファイルを作成し、'モデル名@アニメーション名.fbx' というネーミングをします。例えば、""goober"と呼ばれるモデルについて、別々のアイドル(idle)、歩行(walk)、ジャンプ(jump)、および壁ジャンプ(walljump)のアニメーションを、"goober@idle.fbx"、"goober@walk.fbx" 、 "goober@jump.fbx" 、および "goober@walljump.fbx"インポートすることが出来ます。たとえ元のファイルがメッシュデータつきでエクスポートされていたとしても、これらのファイルのアニメーションデータのみが使用されます。

Attach:animation_at_naming.png

''アニメーションつきキャラクターの4つのアニメーションファイルのサンプル（.fbx 拡張子がUnity上では表示されてないことに留意下さい）''

Unityは自動的に4つのファイル全てをインポートし、@ 記号がない場合に全てのアニメーションを収集します。上のサンプルでは、goober.mbファイルはidle、jump、walk、walkJumpを自動的に参照します。

FBXファイルについて、アニメーションがチェックされてないモデルファイルについて、4つのクリップは、各々希望されるフォーマット各々の希望のキーフレームをgoober@''アニメーション名''.fbxとしてエクスポート（希望のキーフレームをエクスポートすることで）しています。

([[MecanimAnimationSystem|メカニム紹介]] に戻る)
