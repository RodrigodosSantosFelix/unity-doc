! プロファイラー ウィンドウ / Profiler window
Attach:ProfilerWindow2.png\\

!! Unity プレイヤーへのアタッチ
ゲームが他のデバイスまたは他のコンピュータでプレイヤーにより実行されているのをプロファイリングするためには他のプレイヤーにエディタを接続することが可能です。ドロップダウンの __Active Profiler__ によりローカルネットワークで実行されている全てのプレイヤーが表示されます。これらのプレイヤーはプレイヤーの種類とプレイヤーが実行されているホスト名 "iPhonePlayer (トムの iPhone)" で識別できます。プレイヤーに接続するためには
 iPhone)"。_Build Settings_ダイアログの__Development Build__ チェックボックスを有効にして起動する必要があります。その先はさらにチェックボックスを選択してエディタおよびプレイヤーを起動時に自動接続させることが出来ます。

!! プロファイラーのコントロール

Attach:ProfilerControls.png

プロファイラーのコントロールはウィンドウ上部のツールバーにあります。プロファイリングを有効/無効にするのにこれらを使用し、プロファイリングされたフレームを操作する、等々に使用して下さい。トランスポートのコントロールはツールバーの一番右端にあります。ゲームが実行されていてプロファイラーがデータを収集している間、これらのトランスポートのコントロールをクリックすることでゲームがポーズされます。コントロールはまず最初の記録されたフレームに移動して、1フレーム戻り、1フレーム進んで各々の最終フレームに移動します。プロファイラーは全ての記録されたフレームを保持せず、 ''first'' フレームの捉え方はメモリに残っている最も古いフレームと考えるべきです。 "current" トランスポート ボタンによりリアルタイムで収集されたデータを表示します。Active Profiler ポップアップメニューによりプロファイリングがエディタで行うべきか別のプレイヤー (例えば接続されたiOSデバイスで実行されているゲーム) で行うべきかを選択できます。

!!! ディープ プロファイリング

``Deep Profile`` を有効にすると ''全ての'' スクリプトコードがプロファイリングされます  - すなわち全ての関数コールが記録されます。これはゲーム コードの正確にどこで時間を要したかを知りたいときに便利です。

ディープ プロファイリングは __非常に大きなオーバーヘッド__ を要するとともにメモリも大量に使用するため、プロファイリングしている間はゲームが著しく遅くなります。もし複雑なスクリプトコードを使用している場合、ディープ プロファイリングは完全に無理である場合があります。ディープ プロファイリングはシンプルなスクリプトつきの小規模なゲームでは十分に速く動作します。もしゲーム全体で使用して、ゲームがほとんど実行出来ないほどフレームレートが落ちる場合、このアプローチは避けるべきであり、代わりに以下に説明するアプローチを使用すべきです。ディープ プロファイリングはゲームを設計しながら鍵となる機能をどう実装するか決めるときに役立ちます。大規模なゲームではディープ プロファイリングによりUnityがメモリ不足に陥るためこの場合は不可能かもしれません。


手動でスクリプトのブロックをプロファイリングすることはディーププロファイリングよりもオーバーヘッドがかかります。 [[ScriptRef:Profiler.BeginSample.html | Profiler.BeginSample]] および [[ScriptRef:Profiler.EndSample.html | Profiler.EndSample]] スクリプティング関数を使用してコードのセクション周りのプロファイリングを有効化/無効化します。

!!! SyncTimeの表示

固定フレームレートまたは垂直ブランクと同期するとき、Unityは待ち時間を "Wait For Target FPS" に記録します。デフォルトではこの時間はプロファイラーに表示されていません。待ち時間に要したじかんを表示するには "View SyncTime" をオンにします。これはフレームレートが落ち始めるまでの遊びがどれぐらいあるか、を意味します。

!! プロファイラー タイムライン

Attach:ProfilerTimeline.png

プロファイラーウィンドウの上側にある期間のパフォーマンスを表示します。ゲームを実行したとき、データは毎フレーム記録されて、直近の数百フレームの履歴が表示されます。特定フレームをクリックすることでウィンドウの下部に詳細が表示されます。どのタイムラインのエリアを現在選択しているかによって異なる詳細が表示されます。

タイムラインの垂直方向のスケールは自動的に管理されていてウィンドウの垂直方向のスペースを埋めようたもします。例えばCPU使用率でより詳細を確認したいとき、メモリやレンダリングのエリアを閉じます。さらにタイムラインと統計情報の間の枠線を選択してドラッグすることでタイムラインのチャートで使用される画面領域を増やすことが出来ます。

タイムラインはいくつかのエリアからこうせいされます: CPU使用率、レンダリング、およびメモリです。これらのエリアを閉じるにはパネルの close ボタンをクリックし、もう一回追加するにはProfile Controls バーの、 ''Add Area'' ドロップダウンを使用します。

(:tocportion:)

