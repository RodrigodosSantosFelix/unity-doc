! マルチプレイヤーでのネットワーク / Networked Multiplayer

リアルタイム ネットワーキングは複雑な分野ですが、Unityにより簡単にネットワーキング機能をゲームに追加出来ます。それでもゲームで使用する前にネットワーキングのスコープについて理解することは役立ちます。本項ではUnity実装の仕様に沿ってネットワーキングの基本を説明します。もしネットワークゲームを開発するのが初めてならば、始めるまえにこのガイドを一通りやってみることを強く推奨します。

!! [[net-HighLevelOverview | ハイレベル 概要]]

本セクションでは、より深いトピックに入る前に、ネットワーキングの全ての概念を説明します。

!! [[net-UnityNetworkElements | Unityでのネットワーキング要素]]

このガイドの本セクションでは概要で説明した概念のUnityでの実装についてカバーします。

!!! [[net-RPCDetails | RPC 詳細]]

リモート プロシージャ コールまたはRPCによりリモート マシンで関数をコール出来ます。これはクライアントからサーバの関数をコールすることも、サーバが一部または全てのクライアントの関数をコールすることも出来ます。


!!! [[net-StateSynchronization | ステート同期]]

ステート同期は定期的にデータのセットをネットワーク上の二つ以上のゲームインスタンスで更新することです。


!!! [[net-MinimizingBandwidth | ネットワーク帯域の最小化]]

いつどのようにしてデータ共有するかについて決定するひとつひとつの事項はゲームが使用するネットワーク帯域に影響します。このページでネットワーク帯域がどのように使用されていて、どのようにして帯域幅を最小化するか説明します。.


!!! [[net-NetworkView | ネットワーク ビュー]]

ネットワーク ビューはネットワーク上でデータを共有するために使用するコンポーネントであり、Unityネットワーキングの基本的な側面です。このページではそれらについて詳細に説明します。


!!! [[net-NetworkInstantiate | ネットワーク インスタンス化]]

ネットワーキングで難しことはオブジェクトのオーナーシップと誰が何をコントロールするか決定することです。すでに説明したとおり、このセクションで説明するとおりネットワークのインスタンス化によりこれに対応することが出来ます。
さらに、オブジェクトのオーナーシップがより必要な状況において、より洗練された別の解決策をカバーします。


!!! [[net-MasterServer | マスターサーバ]]

マスターサーバは、クライアントにその存在をアピールできるゲームロビーのようなものです。ファイアウォールの中、またはホームネットワークの中からの通信をNATパンチスルーというテクニックを用いて（ファシリテータの手助けを得て）可能にし、プレイヤーが常に互いに通信が出来ます。このページではさらにマスターサーバの使用方法について説明します。
