! Monoアップグレード詳細 / Mono Upgrade Details
Unity 3 において、Mono ランタイムを 1.2.5 から 2.6 にアップグレードし、さらに JavaScript および Boo に関する改善を加えました。Mono のバージョンの間でのバグフィックスや改善を除いて、このページではいくつかのポイントをハイライトします。

!! C# 改善点
基本的に C# 3.5 および C# 2.0 の間の違いであり、次を含みます
* 値型推論 （Value Type Inference）。詳細は [[http://msdn.microsoft.com/en-us/library/bb383973.aspx | ここ]] を参照下さい
* LINQ
* ラムダ式。詳細は [[http://msdn.microsoft.com/en-us/library/bb397687.aspx | ここ]] 参照下さい。

!! JavaScript 改善点
* コンパイラは 4 倍 高速化
* 'extends' はインタフェースで使用することが出来なくなり、Unity Scriptにはその目的では 'implements' が使用可能（以下を参照のこと）
* ジェネリック コレクションといったジェネリック型の使用を新たにサポート
[@		var list = new System.Collections.Generic.List.<String>();
		list.Add("foo");
@]
* 無名関数／クロージャを新たにサポート
[@
		list.Sort(function(x:String, y:String) {
			return x.CompareTo(y);
		});
@]
* ここで、引数や戻り値について、型推論のある簡易的なラムダ式を含む
[@
		list.Sort(function(x, y) x.CompareTo(y));
@]
* 関数型
[@
		function forEach(items, action: function(Object)) {
			for (var item in items) action(item);
		}
@]
* 型推論されたJavaScript 配列内包表記（Array Comprehensions）:
[@
		function printArray(a: int[]) {
			print("[" + String.Join(", ", [i.ToString() for (i in a)]) + "]");
		}
		
		var doubles = [i*2 for (i in range(0, 3))];
		var odds = [i for (i in range(0, 6)) if (i % 2 != 0)];
		printArray(doubles);
		printArray(odds);
@]

* インタフェースの宣言および実装を新たにサポート:
[@
		interface IFoo {
			function bar();
		}
		
		class Foo implements IFoo {
			function bar() {
				Console.WriteLine("Foo.bar");
			}
		}
@]	

* 全ての関数は明示的に仮想関数となり、結果として 'virtual' キーワードは廃止となり、'final' キーワードが導入されて仮想でないメソッドを定義できるようにした:
[@
		final function foo() {
		}
@]
* 値型（構造体）はSystem.ValueTypeから継承したクラスとして定義が可能:
[@
		class Pair extends System.ValueType {
			var First: Object;
			var Second: Object;
			
			function Pair(fst, snd) {
				First = fst;
				Second = snd;
			}
			
			override function ToString() {
				return "Pair(" + First + ", " + Second + ")";
			}
		}
@]
!! Boo 改善点
* Boo をバージョン 0.9.4 にアップグレード。
