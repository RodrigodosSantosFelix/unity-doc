! ShaderLab文法：Passタグ

Passはタグを使用していつどのようにしてレンダリングエンジンによりレンダリングすべきかを指定します。

!! 文法
:__Tags {__ "''TagName1''" = "''Value1''" "''TagName2''" = "''Value2''" __}__: タグの__TagName1__ が値として__Value1__ 、タグの__TagName2__ が値として__Value2__ であることを指定します。タグは好きなだけ指定できます。

!! 詳細
タグは基本的にKey-Valueペアです。[[SL-Pass|Pass]] の中でタグは、当該パスがライティング　パイプライン（環境光、頂点ライティング、ピクセルライティング）のなかでどの役割であるかを制御したり、他のパラメータを判定するのに使用します。次のタグはUnityにより認識され、SubShaderの中でなく'''必ず''' Passセクションの中とする、ことに留意下さい。

!!! LightModeタグ

__LightMode__タグはライティング　パイプラインでのパスの役割を定義します。詳細については[[SL-RenderPipeline|render pipeline]] を参照下さい。これらのタグは手動で使用されることは稀で、ライティングと相互作用のあるほとんどのシェーダは[[SL-SurfaceShaders | Surface Shaders]] で記述され、そういった詳細はその中で処理されます。



LightModeで利用可能なタグは：
* __Always__: 常にレンダリングされ、ライティングは適用されません。
* __ForwardBase__: [[RenderTech-ForwardRendering|Forward rendering]] で使用され、環境光、メイン指向性ライト、頂点／SHライトが適用されます。
* __ForwardAdd__: [[RenderTech-ForwardRendering|Forward rendering]] で使用され、ライトごとに一つのパスで、Additive ピクセルライティングが適用されます。
* __PrepassBase__: [[RenderTech-DeferredLighting|Deferred Lighting]] で使用され、法線や鏡面指数をレンダリングします。
* __PrepassFinal__: [[RenderTech-DeferredLighting|Deferred Lighting]] で使用され、最終的なカラーについて、テクスチャ、ライト、および自己発光、を合成することでレンダリングします。
* __Vertex__: [[RenderTech-VertexLit | Vertex Lit rendering]] でオブジェクトがライトマップされてない場合に使用され、全ての頂点ライトが適用されます。
* __VertexLMRGBM__: [[RenderTech-VertexLit | Vertex Lit rendering]] でオブジェクトがライトマップされてる場合、ライトマップがRGBMエンコードされるプラットフォームにおいて使用されます。
* __VertexLM__: [[RenderTech-VertexLit | Vertex Lit rendering]] でオブジェクトがライトマップされてる場合に、ライトマップがdoub-LDRエンコードされるプラットフォームにおいて(一般にモバイル向けプラットフォームや古いデスクトップ向けGPUにて)使用されます。
* __ShadowCaster__: オブジェクトを、Shadow Casterとしてレンダリングします。
* __ShadowCollector__: Forward Renderingのために、オブジェクトの影をScreen-Spaceバッファに集めます。



!!! RequireOptionsタグ


特定の外部条件が満たされた場合のみレンダリングされることを、パスで指定することが出来ます。これは__RequireOptions__ により実現され、値はスペースで区切られた文字列によるオプションです。現在、Unityでサポートされているオプションは：
* __SoftVegetation__: もし[[class-QualitySettings | Quality Settings]] でSoft Vegetationが有効である場合のみ、このパスをレンダリングします。


!! 関連項目

SubShadersにタグを割り当てることが可能であり、[[SL-SubshaderTags | SubShader Tags]] を参照下さい。

