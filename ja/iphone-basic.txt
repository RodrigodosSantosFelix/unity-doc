! Unity iOS の基本

このセクションで、iOSで作業するうえで、最も頻繁に聞かれる重要な質問についてカバーします。

!! 必要な要件

!!! AppleからiPhone Developerの承認は得られましたが、iOS開発は初めてです。最初は何から始めたら良いのでしょうか？
__回答__: SDKをダウンロードして、Appleデベロッパーサイトでの作業を開始して、チーム、デバイス、プロビジョニングをセットアップします。開始するために [[iphone-accountsetup | 基本的に必要なステップ]] をまとめてあります。

!!! UnityでビルドしたゲームはiPhone シミュレータで実行できますか？
__回答__: いいえ、しかしUnity iOSは最新のSDKを使用しているならばiPadシミュレータ向けにビルドは出来ます。しかしシミュレータそのものは、iOS からの入力の全てをシミュレートできず、 iPhone/iPadでのパフォーマンスを正しくエミュレートできないため、Unityでそれほど便利ではありません。Unityに入ってゲームプレイをテストするには、 Unity Remoteを使用してiPhone/iPad をリモコンとして使用すべきです。次に、パフォーマンスやゲームの最適化を行う準備が整ったら、iOSデバイスにパブリッシュします。

!! Unity 機能

!!! タッチスクリーンおよび加速度計で作業するにはどうしたら良いですか？
__回答__: Unity iOSをインストールした際のスクリプティング リファレンスのの中で、アプリをビルドするうえで必要なデバイス機能をフックするクラスを見つけることが出来ます。 詳細については [[Input#Input | システム入力のページ]] を参照下さい。

!!! My existing particle systems seem to run very slowly on iOS.  What should I do?
__回答__: iOS has relatively low fillrate. If your particles cover a rather large portion of the screen with multiple layers, it will kill iOS performance even with the simplest shader. We suggest baking your particle effects into a series of textures off-line. Then, at run-time, you can use 1-2 particles to display them via animated textures. You can get fairly decent looking effects with a minimum amount of overdraw this way.

!!! Can I make a game that uses heavy physics?
__回答__:  Physics can be expensive on iOS is it requires a lot of floating point number crunching. You should completely avoid MeshColliders if at all possible, but they can be used if they are really necessary. To improve performance, use a low fixed framerate using ^^Edit->Time->Fixed Delta Time^^. A framerate of 10-30 is recommended. Enable rigidbody interpolation to achieve smooth motion while using low physics frame rates. In order to achieve completely fluid framerate without oscillations, it is best to pick fixed @@deltaTime@@ value based on the average framerate your game is getting on iOS. Either 1:1 or half the frame rate is recommended. For example, if you get 30 fps, you should use 15 or 30 fps for fixed frame rate (0.033 or 0.066)

!!!Can I access the gallery, music library or the native iPod player in Unity iOS?
__回答__: Yes - if you implement it. Unity iPhone supports the native plugin system, where you can add any feature you need -- including access to Gallery, Music library, iPod Player and any other feature that the iOS SDK exposes. Unity iOS does not provide an API for accessing the listed features through Unity scripts.


!! UnityGUI Considerations
!!! What kind of performance impact will UnityGUI make on my games?
__回答__: UnityGUI is fairly expensive when many controls are used.  It is ideal to limit your use of UnityGUI to game menus or very minimal GUI Controls while your game is running.  It is important to note that every object with a script containing an @@OnGUI()@@ call will require additional processor time -- even if it is an empty @@OnGUI()@@ block.  It is best to disable any scripts that have an @@OnGUI()@@ call if the GUI Controls are not being used.  You can do this by marking the script as @@enabled = false@@.

!!! Any other tips for using UnityGUI?
__回答__: Try using GUILayout as little as possible. If you are not using GUILayout at all from one @@OnGUI()@@ call, you can disable all GUILayout rendering using @@MonoBehaviour.useGUILayout = false;@@ This doubles GUI rendering performance. Finally, use as few GUI elements while rendering 3D scenes as possible.
